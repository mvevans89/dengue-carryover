rownames(SalivaBeside) <- levels(GMCAmeans$class)
SalivaBeside <- t(SalivaBeside)
pdf(file="figures/augustSalivaClass.pdf", width = 8, height=6, family="sans")
barCenters <- barplot(SalivaBeside,
beside=T,
col=c(rep(c(colRural, colSuburban,
colUrban), each=2)),
density = c(20,NA),
names.arg=colnames(SalivaBeside),
ylim=c(0,0.3),
main = "Dengue Saliva Infections",
ylab = "% Infected",
las=1,
cex.lab=1.5, cex.axis=1
)
SalivaBesideSE <- as.matrix(rbind(GMCAmeans$Saliva_se[GMCAmeans$DPI=="14"], GMCAmeans$Saliva_se[GMCAmeans$DPI=="21"]), nrow=2)
#add se bars
segments(barCenters, SalivaBeside - SalivaBesideSE , barCenters,
SalivaBeside + SalivaBesideSE, lwd = 1.5)
arrows(barCenters, SalivaBeside - SalivaBesideSE , barCenters,
SalivaBeside + SalivaBesideSE,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
legend("topright", legend=c("14 dpi", "21 dpi"), density = c(40,NA),
bty = "n", col = "gray80")
dev.off()
SalivaBeside <- as.matrix(cbind(GMCAmeans$Saliva_mean[GMCAmeans$DPI=="14"], GMCAmeans$Saliva_mean[GMCAmeans$DPI=="21"]), ncol=2)
colnames(SalivaBeside) <- c("14dpi", "21dpi")
rownames(SalivaBeside) <- levels(GMCAmeans$class)
SalivaBeside <- t(SalivaBeside)
pdf(file="figures/augustSalivaClass.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(SalivaBeside,
beside=T,
col=c(rep(c(colRural, colSuburban,
colUrban), each=2)),
density = c(20,NA),
names.arg=colnames(SalivaBeside),
ylim=c(0,0.3),
main = "Dengue Saliva Infections",
ylab = "% Infected",
las=1,
cex.lab=1.5, cex.axis=1
)
SalivaBesideSE <- as.matrix(rbind(GMCAmeans$Saliva_se[GMCAmeans$DPI=="14"], GMCAmeans$Saliva_se[GMCAmeans$DPI=="21"]), nrow=2)
#add se bars
segments(barCenters, SalivaBeside - SalivaBesideSE , barCenters,
SalivaBeside + SalivaBesideSE, lwd = 1.5)
arrows(barCenters, SalivaBeside - SalivaBesideSE , barCenters,
SalivaBeside + SalivaBesideSE,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
legend("topright", legend=c("14 dpi", "21 dpi"), density = c(40,NA),
bty = "n", col = "gray80")
dev.off()
GMCAmeans <- augustraw %>%
#drop individual
select(-Individual, -site, -Wing) %>%
group_by(DPI, class) %>%
summarise_each(funs(mean,se=(sd(.)/sqrt(n())))) %>%
ungroup()
bodyBeside <- as.matrix(cbind(GMCAmeans$Body_mean[GMCAmeans$DPI=="14"], GMCAmeans$Body_mean[GMCAmeans$DPI=="21"]), ncol=2)
colnames(bodyBeside) <- c("14dpi", "21dpi")
rownames(bodyBeside) <- levels(GMCAmeans$class)
bodyBeside <- t(bodyBeside)
pdf(file="figures/augustBodyClass.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(bodyBeside,
beside=T,
col=c(rep(c(colRural, colSuburban,
colUrban), each=2)),
density = c(20,NA),
names.arg=colnames(bodyBeside),
ylim=c(0,0.65),
main = "Dengue Body Infections",
ylab = "% Infected",
las=1,
cex.lab=1.5, cex.axis=1
)
bodyBesideSE <- as.matrix(rbind(GMCAmeans$Body_se[GMCAmeans$DPI=="14"], GMCAmeans$Body_se[GMCAmeans$DPI=="21"]), nrow=2)
#add se bars
segments(barCenters, bodyBeside - bodyBesideSE , barCenters,
bodyBeside + bodyBesideSE, lwd = 1.5)
arrows(barCenters, bodyBeside - bodyBesideSE , barCenters,
bodyBeside + bodyBesideSE,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
legend("topright", legend=c("14 dpi", "21 dpi"), density = c(40,NA),
bty = "n", col = "gray80")
dev.off()
GMCAmeans <- augustraw %>%
#drop individual
select(-Individual, -site, -Wing) %>%
group_by(DPI, class) %>%
summarise_each(funs(mean,se=(sd(.)/sqrt(n())))) %>%
ungroup()
bodyBeside <- as.matrix(cbind(GMCAmeans$Body_mean[GMCAmeans$DPI=="14"], GMCAmeans$Body_mean[GMCAmeans$DPI=="21"]), ncol=2)
colnames(bodyBeside) <- c("14dpi", "21dpi")
rownames(bodyBeside) <- levels(GMCAmeans$class)
bodyBeside <- t(bodyBeside)
pdf(file="figures/augustBodyClass.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(bodyBeside,
beside=T,
col=c(rep(c(colRural, colSuburban,
colUrban), each=2)),
density = c(20,NA),
names.arg=colnames(bodyBeside),
ylim=c(0,0.65),
main = "Dengue Body Infections",
ylab = "% Infected",
xlab = "Land Class",
las=1,
cex.lab=1.5, cex.axis=1
)
bodyBesideSE <- as.matrix(rbind(GMCAmeans$Body_se[GMCAmeans$DPI=="14"], GMCAmeans$Body_se[GMCAmeans$DPI=="21"]), nrow=2)
#add se bars
segments(barCenters, bodyBeside - bodyBesideSE , barCenters,
bodyBeside + bodyBesideSE, lwd = 1.5)
arrows(barCenters, bodyBeside - bodyBesideSE , barCenters,
bodyBeside + bodyBesideSE,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
legend("topright", legend=c("14 dpi", "21 dpi"), density = c(40,NA),
bty = "n", col = "gray80")
dev.off()
SalivaBeside <- as.matrix(cbind(GMCAmeans$Saliva_mean[GMCAmeans$DPI=="14"], GMCAmeans$Saliva_mean[GMCAmeans$DPI=="21"]), ncol=2)
colnames(SalivaBeside) <- c("14dpi", "21dpi")
rownames(SalivaBeside) <- levels(GMCAmeans$class)
SalivaBeside <- t(SalivaBeside)
pdf(file="figures/augustSalivaClass.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(SalivaBeside,
beside=T,
col=c(rep(c(colRural, colSuburban,
colUrban), each=2)),
density = c(20,NA),
names.arg=colnames(SalivaBeside),
ylim=c(0,0.3),
main = "Dengue Saliva Infections",
ylab = "% Infected",
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
SalivaBesideSE <- as.matrix(rbind(GMCAmeans$Saliva_se[GMCAmeans$DPI=="14"], GMCAmeans$Saliva_se[GMCAmeans$DPI=="21"]), nrow=2)
#add se bars
segments(barCenters, SalivaBeside - SalivaBesideSE , barCenters,
SalivaBeside + SalivaBesideSE, lwd = 1.5)
arrows(barCenters, SalivaBeside - SalivaBesideSE , barCenters,
SalivaBeside + SalivaBesideSE,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
legend("topright", legend=c("14 dpi", "21 dpi"), density = c(40,NA),
bty = "n", col = "gray80")
dev.off()
N <- c(1,1,0,0,0,0)
?sample
x <- sample(N,3, replace=F)
return(sum(x))
sum(x)
s
x
x <- sample(N,3, replace=F)
sum(x)
x
sampFunc <- function(N){
x <- sample(N,3, replace=F)
return(sum(x))
}
?apply
simulation <- NULL
for (i in 1:100){
simulation[i] <- sampFunc
}
for (i in 1:100){
simulation[i] <- sampFunc(N=N)
}
hist(simulation)
setwd("~/Dropbox/UGA/Research/Murdock/urbanDengue/analysis")
library(dplyr)
emergence <- read.csv("../data/infections/infectionsOct.csv")
byTray <- emergence %>%
group_by(Class, Tray_Code, Sex) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
byTray <- byTray[order(byTray$Tray_Code),]
barplot(byTray$cumulative,
names.arg = byTray$Tray_Code, col=c("pink",
"dodgerblue")[byTray$Sex],
xlab="Tray",
ylab="Cumulative Emerged",
main="Cumulative Albo Emerged by Tray to Infect")
byTrayF <- byTray[byTray$Sex=="F",]
barplot(byTrayF$cumulative,
names.arg = byTrayF$Tray_Code, col=c("dodgerblue",
"black", "maroon")[byTrayF$Class],
xlab="Tray",
ylab="Cumulative Emerged",
main="Cumulative Female Albo Emerged by Tray")
bySite <- emergence %>%
group_by(Class, Site_Code, Sex) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
bySite <- emergence %>%
group_by(Class, Site_Code, Sex) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
#make a little bar graph
barplot(bySite$cumulative,
names.arg = bySite$Site_Code, col=c("pink",
"dodgerblue")[bySite$Sex],
xlab="Site",
ylab="Cumulative Emerged",
main="Cumulative Albo Emerged by Site")
bySiteF <- bySite[bySite$Sex=="F",]
barplot(bySiteF$cumulative,
names.arg = bySiteF$Site_Code, col=c("dodgerblue",
"black", "maroon")[bySiteF$Class],
xlab="Site",
ylab="Cumulative Emerged",
main="Cumulative Female Albo Emerged by Site")
females <- emergence[emergence$Sex=="F",]
curve <- emergence[emergence$Sex=="F",] %>%
group_by(Class, Site_Code, Exp_Day) %>%
summarise(emerged=sum(Num_Emerge)) %>%
mutate(cumulative=cumsum(emerged)) %>%
ungroup()
if (females$Month[1]==7){
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(2, 7, 3, 5)) {
females$age[i] <- as.numeric(format(as.Date("2016-07-17"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-07-20"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==8) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-08-16"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-08-19"),
"%d"))-females$Day[i]
}
} else if (female$Month[1]==10) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-10-20"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-10-20"),
"%d"))-females$Day[i]
}
}
females <- emergence[emergence$Sex=="F",]
#calculate age
#needs to be calculated for both feed dates
#feed date 1: 8-16-2016: R1, U1, U2, S3
#feed date 2: 8-19-2016: R2, R3, U3, S1, S2
if (females$Month[1]==7){
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(2, 7, 3, 5)) {
females$age[i] <- as.numeric(format(as.Date("2016-07-17"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-07-20"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==8) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-08-16"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-08-19"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==10) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-10-20"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-10-20"),
"%d"))-females$Day[i]
}
}
femaleSite <- select(females, Site_Code, Num_Emerge, age)
femaleSiteExpanded <- femaleSite[rep(seq.int(1,nrow(femaleSite)), femaleSite$Num_Emerge),c(1,3)]
siteAge <- femaleSiteExpanded %>%
group_by(Site_Code) %>%
summarise(median(age), mean(age), min(age), max(age)) %>%
ungroup()
View(siteAge)
females <- emergence[emergence$Sex=="F",]
#calculate age
#needs to be calculated for both feed dates
#feed date 1: 8-16-2016: R1, U1, U2, S3
#feed date 2: 8-19-2016: R2, R3, U3, S1, S2
if (females$Month[1]==7){
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(2, 7, 3, 5)) {
females$age[i] <- as.numeric(format(as.Date("2016-07-17"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-07-20"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==8) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-08-16"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-08-19"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==10) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-10-15"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-10-15"),
"%d"))-females$Day[i]
}
}
#new dataframe listing each individual mosquito by site
require(dplyr)
femaleSite <- select(females, Site_Code, Num_Emerge, age)
#repeat each row based on number of mosquitoes emerged, each mosq gets a row
femaleSiteExpanded <- femaleSite[rep(seq.int(1,nrow(femaleSite)), femaleSite$Num_Emerge),c(1,3)]
#can now calculate mean and median age by site
siteAge <- femaleSiteExpanded %>%
group_by(Site_Code) %>%
summarise(median(age), mean(age), min(age), max(age)) %>%
ungroup()
View(siteAge)
curve <- emergence[emergence$Sex=="F",] %>%
group_by(Class, Site_Code, Exp_Day) %>%
summarise(emerged=sum(Num_Emerge)) %>%
mutate(cumulative=cumsum(emerged)) %>%
ungroup()
site="U2"
with(curve[curve$Site_Code==site,], plot(y=cumulative, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(cumulative)+10)), pch=19, col=siteColor, main=paste(site, "cumulative Emergence")))
siteColor <- "maroon"
with(curve[curve$Site_Code==site,], plot(y=cumulative, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(cumulative)+10)), pch=19, col=siteColor, main=paste(site, "cumulative Emergence")))
with(curve[curve$Site_Code==site,], lines(y=cumulative, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(cumulative)+10)), col=siteColor))
with(curve[curve$Site_Code==site,], lines(y=cumulative, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(cumulative)+10)), col=siteColor))
with(curve[curve$Site_Code==site,], plot(y=cumulative, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(cumulative)+10)), pch=19, col=siteColor, main=paste(site, "cumulative Emergence")))
#lines for cumulative
with(curve[curve$Site_Code==site,], lines(y=cumulative, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(cumulative)+10)), col=siteColor))
with(curve[curve$Site_Code==site,], plot(y=emerged, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(emerged)+10)), pch=19, col=siteColor, main=paste(site, "emergence by Day")))
with(curve[curve$Site_Code==site,], lines(y=emerged, x=Exp_Day, xlim=c(6, 21), ylim=c(0,25), col=siteColor))
with(curve[curve$Site_Code==site,], plot(y=emerged, x=Exp_Day, xlim=c(6, 21), ylim=c(0,(max(emerged)+10)), pch=19, col=siteColor, main=paste(site, "emergence by Day")))
#lines
with(curve[curve$Site_Code==site,], lines(y=emerged, x=Exp_Day, xlim=c(6, 21), ylim=c(0,25), col=siteColor))
levels(emergence$Site_Code)
max(emerged)+10
View(curve)
emergencePlots <- function(site){
par(mfrow=c(1,2))
#set plot color
if (startsWith(site, "R")) {
siteColor <- "dodgerblue"
} else if (startsWith(site, "S")) {
siteColor <- "gray60"
} else if (startsWith(site, "U")) {
siteColor <- "maroon"
}
#cumulative plot
with(curve[curve$Site_Code==site,], plot(y=cumulative, x=Exp_Day, xlim=c(10, 25), ylim=c(0,50), pch=19, col=siteColor, main=paste(site, "Cumulative Emergence")))
#lines for cumulative
with(curve[curve$Site_Code==site,], lines(y=cumulative, x=Exp_Day, xlim=c(10, 25), ylim=c(0,50), col=siteColor))
#mtext
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(curve[curve$Site_Code==site,cumulative]), "/ First Day= ", min(curve[curve$Site_Code==site,Exp_Day]), sep="")))
#emergence plot
with(curve[curve$Site_Code==site,], plot(y=emerged, x=Exp_Day, xlim=c(10, 25), ylim=c(0,25), pch=19, col=siteColor, main=paste(site, "emergence by Day")))
#lines
with(curve[curve$Site_Code==site,], lines(y=emerged, x=Exp_Day, xlim=c(10, 25), ylim=c(0,25), col=siteColor))
#mtext
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(curve[curve$Site_Code==site,cumulative]), "/ First Day= ", min(curve[curve$Site_Code==site,Exp_Day]), sep="")))
}
sapply(as.vector(levels(emergence$Site_Code)), FUN=emergencePlots)
with(curve[curve$Site_Code==site,], plot(y=cumulative, x=Exp_Day, xlim=c(10, 25), ylim=c(0,50), pch=19, col=siteColor, main=paste(site, "Cumulative Emergence")))
#lines for cumulative
with(curve[curve$Site_Code==site,], lines(y=cumulative, x=Exp_Day, xlim=c(10, 25), ylim=c(0,50), col=siteColor))
#mtext
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(curve[curve$Site_Code==site,cumulative]), "/ First Day= ", min(curve[curve$Site_Code==site,Exp_Day]), sep="")))
min(curve[curve$Site_Code==site,Exp_Day])
min(curve[curve$Site_Code==site,curve$Exp_Day])
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(cumulative]), "/ First Day= ", min(Exp_Day), sep="")))
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(cumulative), "/ First Day= ", min(Exp_Day), sep="")))
emergencePlots <- function(site){
par(mfrow=c(1,2))
#set plot color
if (startsWith(site, "R")) {
siteColor <- "dodgerblue"
} else if (startsWith(site, "S")) {
siteColor <- "gray60"
} else if (startsWith(site, "U")) {
siteColor <- "maroon"
}
#cumulative plot
with(curve[curve$Site_Code==site,], plot(y=cumulative, x=Exp_Day, xlim=c(10, 25), ylim=c(0,50), pch=19, col=siteColor, main=paste(site, "Cumulative Emergence")))
#lines for cumulative
with(curve[curve$Site_Code==site,], lines(y=cumulative, x=Exp_Day, xlim=c(10, 25), ylim=c(0,50), col=siteColor))
#mtext
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(cumulative), "/ First Day= ", min(Exp_Day), sep="")))
#emergence plot
with(curve[curve$Site_Code==site,], plot(y=emerged, x=Exp_Day, xlim=c(10, 25), ylim=c(0,25), pch=19, col=siteColor, main=paste(site, "emergence by Day")))
#lines
with(curve[curve$Site_Code==site,], lines(y=emerged, x=Exp_Day, xlim=c(10, 25), ylim=c(0,25), col=siteColor))
#mtext
with(curve[curve$Site_Code==site,], mtext(paste("Cumulative= ", max(cumulative), "/ First Day= ", min(Exp_Day), sep="")))
}
sapply(as.vector(levels(emergence$Site_Code)), FUN=emergencePlots)
sapply(as.vector(levels(curve$Site_Code)), FUN=emergencePlots)
View(curve)
library(dplyr)
emergence <- read.csv("../data/infections/infectionsOct.csv")
#cumulative emergence
byTray <- emergence %>%
group_by(Class, Tray_Code, Sex) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
#order by tray
byTray <- byTray[order(byTray$Tray_Code),]
#make a little bar graph
barplot(byTray$cumulative,
names.arg = byTray$Tray_Code, col=c("pink",
"dodgerblue")[byTray$Sex],
xlab="Tray",
ylab="Cumulative Emerged",
main="Cumulative Albo Emerged by Tray to Infect")
#just the women
byTrayF <- byTray[byTray$Sex=="F",]
barplot(byTrayF$cumulative,
names.arg = byTrayF$Tray_Code, col=c("dodgerblue",
"black", "maroon")[byTrayF$Class],
xlab="Tray",
ylab="Cumulative Emerged",
main="Cumulative Female Albo Emerged by Tray")
legend("topleft", legend=levels(byTrayF$Class), col=c("dodgerblue",
"black", "maroon"), pch=15)
bySite <- emergence %>%
group_by(Class, Site_Code, Sex) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
#make a little bar graph
barplot(bySite$cumulative,
names.arg = bySite$Site_Code, col=c("pink",
"dodgerblue")[bySite$Sex],
xlab="Site",
ylab="Cumulative Emerged",
main="Cumulative Albo Emerged by Site")
bySite
#just the women
bySiteF <- bySite[bySite$Sex=="F",]
barplot(bySiteF$cumulative,
names.arg = bySiteF$Site_Code, col=c("dodgerblue",
"black", "maroon")[bySiteF$Class],
xlab="Site",
ylab="Cumulative Emerged",
main="Cumulative Female Albo Emerged by Site")
legend("topleft", legend=levels(bySiteF$Class), col=c("dodgerblue",
"black", "maroon"), pch=15)
females <- emergence[emergence$Sex=="F",]
#calculate age
#needs to be calculated for both feed dates
#feed date 1: 8-16-2016: R1, U1, U2, S3
#feed date 2: 8-19-2016: R2, R3, U3, S1, S2
if (females$Month[1]==7){
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(2, 7, 3, 5)) {
females$age[i] <- as.numeric(format(as.Date("2016-07-17"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-07-20"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==8) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-08-16"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-08-19"),
"%d"))-females$Day[i]
}
} else if (females$Month[1]==10) {
for (i in 1:nrow(females)){
if (females$Site[i] %in% c(4, 7, 8, 6)) {
females$age[i] <- as.numeric(format(as.Date("2016-10-15"),
"%d"))-females$Day[i]
} else females$age[i] <- as.numeric(format(as.Date("2016-10-15"),
"%d"))-females$Day[i]
}
}
#new dataframe listing each individual mosquito by site
require(dplyr)
femaleSite <- select(females, Site_Code, Num_Emerge, age)
#repeat each row based on number of mosquitoes emerged, each mosq gets a row
femaleSiteExpanded <- femaleSite[rep(seq.int(1,nrow(femaleSite)), femaleSite$Num_Emerge),c(1,3)]
#can now calculate mean and median age by site
siteAge <- femaleSiteExpanded %>%
group_by(Site_Code) %>%
summarise(median(age), mean(age), min(age), max(age)) %>%
ungroup()
curve <- emergence[emergence$Sex=="F",] %>%
group_by(Class, Site_Code, Exp_Day) %>%
summarise(emerged=sum(Num_Emerge)) %>%
mutate(cumulative=cumsum(emerged)) %>%
ungroup()
View(curve)
curve[with(curve, order(Site_Code, Exp_Day)),]
