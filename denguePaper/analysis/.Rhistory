august$site <- substr(as.character(august$Individual), 1, 2)
august$class <- NULL
for (i in 1:nrow(august)){
if (substr(august$site[i], 1,1)=="R"){
august$class[i] <- "Rural"
} else if (substr(august$site[i], 1,1)=="S"){
august$class[i] <- "Suburban"
} else if (substr(august$site[i], 1,1)=="U"){
august$class[i] <- "Urban"
}
}
august$class <- as.factor(august$class)
august$site <- as.factor(august$site)
#convert Y and N to 1 and 0 for statistics
levels(august$Body) <- c("NA", 0, 1)
august$Body <- as.numeric(as.character(august$Body))
levels(august$Saliva) <- c("NA", 0, 1)
august$Saliva <- as.numeric(as.character(august$Saliva))
#save with NAs for later
augustraw <- august
#omit NA for now
august <- na.omit(august)
colRural <- "dodgerblue"
colSuburban <- "gray80"
colUrban <- "maroon"
augustSumm <- august %>%
#drop individual
select(-Individual) %>%
group_by(DPI, site, class) %>%
summarise_each(funs(mean,sd,se=(sd(.)/sqrt(n())))) %>%
ungroup()
#print table
xtable(augustSumm)
View(augustSumm)
ggpairs(augustraw[,-1])
#split into training(70) and testing(30)
set.seed(8675309)
train <- sample_frac(augustraw, 0.7)
test <- setdiff(augustraw, train)
#train a model on training data
model <- glm(Body~class+Wing+DPI+class*Wing+class*DPI, data=train,
family=binomial(link="logit"))
summary(model)
#look at deviance using an anova
anova(model, test="Chisq")
#predict on test values and look at AUC value
p <- predict(model, newdata=test, type= "response")
pr <- prediction(p, test$Body)
auc <- performance(pr, measure = "auc")@y.values[[1]]
auc #pretty shitty
mixModel <- glmer(Body~class+ Wing + DPI + (1|site), data=train,
family=binomial)
summary(mixModel)
#predict on test values and look at AUC value
p <- predict(mixModel, newdata=test, type= "response")
pr <- prediction(p, test$Body)
auc <- performance(pr, measure = "auc")@y.values[[1]]
auc #does perform better when controlling for random effects
#ggpairs(augustraw[,-1])
#split into training(70) and testing(30)
set.seed(8675309)
train <- sample_frac(augustraw, 0.7)
test <- setdiff(augustraw, train)
#train a model on training data
model <- glm(Saliva~class+Wing+DPI+class*Wing+class*DPI, data=train,
family=binomial(link="logit"))
summary(model)
#look at deviance using an anova
anova(model, test="Chisq")
#predict on test values and look at AUC value
p <- predict(model, newdata=test, type= "response")
pr <- prediction(p, test$Body)
auc <- performance(pr, measure = "auc")@y.values[[1]]
auc #pretty shitty
plot(y=jitter(august$Body), x=august$Wing, pch=16,
col=c("gray80", "dodgerblue", "maroon")[august$class],
ylab="Body Infections",
xlab= "Wing Length (mm)",
main= "Wing Length and Body Infection by Land Class")
climate <- climate[climate$Temp<75,]
summary <- climate %>%
group_by(Site_ID) %>%
summarise(Tmean=mean(Temp))
boxplot(climate$Temp~climate$Site_ID)
climate <- read.csv("../data/microclimate/augustAdult.csv")[,-1]
setwd("~/Dropbox/UGA/Research/Murdock/urbanDengue/analysis")
climate <- read.csv("../data/microclimate/augustAdult.csv")[,-1]
climate <- climate[climate$Temp<75,]
summary <- climate %>%
group_by(Site_ID) %>%
summarise(Tmean=mean(Temp))
boxplot(climate$Temp~climate$Site_ID)
briere1_99
install.packages("devRate")
library(devRate)
briere1_99
idMerge <- read.csv("data/microclimate/trayLoggerID.csv")
idMerge <- read.csv("../data/microclimate/trayLoggerID.csv")
climateTray <- merge(idMerge, climate, by="Pot_ID")
View(climateTray)
tempByTray <- climateTray %>%
group_by(Tray_ID, Site_ID, Class) %>%
summarise(Temp=mean(Temp)) %>%
ungroup()
View(tempByTray)
View(byTrayF)
library(dplyr)
library(xtable)
library(tidyr)
library(ggplot2) #for ggpairs
library(GGally) #for ggpairs
library(ROCR) #for prediction and AUC
library(lme4) #mixed models
august <- read.csv("../data/infections/infectionsAugust.csv")
#drop head for now
august <- select(august, -Head)
#adjust wingLength
august$Wing <- august$WingLength*august$conversion..mm.bar.
august <- select(august, -WingLength, -conversion..mm.bar.)
#dpi as factor
august$DPI <- as.factor(august$DPI)
#drop contaminated individuals
august <- filter(august, Body != "C")
august <- filter(august, Saliva != "C")
#add in class and site
august$site <- substr(as.character(august$Individual), 1, 2)
august$class <- NULL
for (i in 1:nrow(august)){
if (substr(august$site[i], 1,1)=="R"){
august$class[i] <- "Rural"
} else if (substr(august$site[i], 1,1)=="S"){
august$class[i] <- "Suburban"
} else if (substr(august$site[i], 1,1)=="U"){
august$class[i] <- "Urban"
}
}
august$class <- as.factor(august$class)
august$site <- as.factor(august$site)
#convert Y and N to 1 and 0 for statistics
levels(august$Body) <- c("NA", 0, 1)
august$Body <- as.numeric(as.character(august$Body))
levels(august$Saliva) <- c("NA", 0, 1)
august$Saliva <- as.numeric(as.character(august$Saliva))
#save with NAs for later
augustraw <- august
#omit NA for now
august <- na.omit(august)
colRural <- "dodgerblue"
colSuburban <- "gray80"
colUrban <- "maroon"
emergence <- read.csv("../data/infections/infectionsAugust.csv")[,-11]
othEmerge <- read.csv("../data/emergenceAugust.csv")[,-11]
othEmerge <- read.csv("../data/infections/emergenceAugust.csv")[,-11]
allEmerge <- rbind(emergence, othEmerge)
emergence <- read.csv("../data/microclimate/infectionsAugust.csv")
emergence <- read.csv("../data/microclimate/emergenceAugust.csv")
byTrayF <- emergence %>%
group_by(Class, Tray_Code, Sex) %>%
filter(Sex==F) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
byTrayF <- emergence %>%
group_by(Class, Tray_Code, Sex) %>%
filter(Sex=F) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
byTray <- emergence %>%
group_by(Class, Tray_Code, Sex) %>%
summarise(cumulative=sum(Num_Emerge)) %>%
ungroup()
byTrayF <- byTray[byTray$Sex=="F",]
View(byTrayF)
climate <- read.csv("../data/microclimate/augustAdult.csv")[,-1]
climate <- climate[climate$Temp<75,]
idMerge <- read.csv("../data/microclimate/trayLoggerID.csv")
climateTray <- merge(idMerge, climate, by="Pot_ID")
tempByTray <- climateTray %>%
group_by(Tray_ID, Site_ID, Class) %>%
summarise(Temp=mean(Temp)) %>%
ungroup()
View(tempByTray)
R0params <- merge(tempByTray, byTrayF, by="Tray_ID")
R0params <- merge(tempByTray, byTrayF, by.x="Tray_ID", by.y="Tray_Code")
R0params <- select(R0params, -Class.y, -sex)
R0params <- select(R0params, -Class.y, -Sex)
R0params$m <- R0params$cumulative/50
View(R0params)
august <- read.csv("../data/infections/infectionsAugust.csv")
#drop head for now
august <- select(august, -Head)
#adjust wingLength
august$Wing <- august$WingLength*august$conversion..mm.bar.
august <- select(august, -WingLength, -conversion..mm.bar.)
#dpi as factor
august$DPI <- as.factor(august$DPI)
#drop contaminated individuals
august <- filter(august, Body != "C")
august <- filter(august, Saliva != "C")
#add in class and site
august$site <- substr(as.character(august$Individual), 1, 2)
august$class <- NULL
for (i in 1:nrow(august)){
if (substr(august$site[i], 1,1)=="R"){
august$class[i] <- "Rural"
} else if (substr(august$site[i], 1,1)=="S"){
august$class[i] <- "Suburban"
} else if (substr(august$site[i], 1,1)=="U"){
august$class[i] <- "Urban"
}
}
august$class <- as.factor(august$class)
august$site <- as.factor(august$site)
#convert Y and N to 1 and 0 for statistics
levels(august$Body) <- c("NA", 0, 1)
august$Body <- as.numeric(as.character(august$Body))
levels(august$Saliva) <- c("NA", 0, 1)
august$Saliva <- as.numeric(as.character(august$Saliva))
#save with NAs for later
augustraw <- august
#omit NA for now
august <- na.omit(august)
augustSumm <- august %>%
#drop individual
select(-Individual) %>%
group_by(DPI, site, class) %>%
summarise_each(funs(mean,sd,se=(sd(.)/sqrt(n())))) %>%
ungroup()
augustSumm14 <- augustSumm[augustSumm$DPI=="14",]
bc <- select(augustSumm14, site, Saliva_mean)
R0params <- merge(R0params, bc, by.x="Site_ID", by.y="site")
View(R0params)
augustSumm21 <- augustSumm[augustSumm$DPI=="21",]
R0params <- merge(tempByTray, byTrayF, by.x="Tray_ID", by.y="Tray_Code")
R0params <- select(R0params, -Class.y, -Sex)
R0params$m <- R0params$cumulative/50
bc <- select(augustSumm21, site, Saliva_mean)
R0params <- merge(R0params, bc, by.x="Site_ID", by.y="site")
View(R0params)
briere2_99
R0params$a <- 1.93E-04 * R0params$Temp * (R0params$Temp - 10.25) * (38.32 - R0params$Temp)^(1/2)
devRateEqList
poly4
poly2
R0params$p <- 9.04 * R0params$Temp + 39.33 * (R0params$Temp^2) + -3.61E-03
View(R0params)
R0params$p <- 39.33 * R0params$Temp + -3.61E-03 * (R0params$Temp^2) + 9.04
View(R0params)
x=c(9.04,29.33,25)
y=c(0,0,.85)
lm(y ~ poly(x,2, raw=T))
pEAMod <- lm(y ~ poly(x,2, raw=T))
predict(x=pEAMod, newdata = R0params$Temp)
pEAMod <- lm(y ~ poly(x,2, raw=T))
predict(x=pEAMod, newdata = R0params$Temp)
predict(object=pEAMod, newdata = R0params$Temp)
pEAMod
coef(pEAMod)[1]
coef(pEAMod)[[1]]
R0params$p <- coef(pEAMod)[[2]] * R0params$Temp + coef(pEAMod)[[3]] * (R0params$Temp^2) + coef(pEAMod)[[1]]
View(R0params)
R0params$n <- 1/(1.09E-04 * R0params$Temp * (R0params$Temp - 10.39) * (43.05 - R0params$Temp)^(1/2))
View(R0params)
R0params$n <- 1/(1.09E-04 * 28 * (28 - 10.39) * (43.05 - 28)^(1/2))
R0params$n <- 14
vcEq <- function(m, a, bc, p, n){
vc <- (m * a^2 * bc * (p^n))/(-ln(p))
}
R0params$VC <- vcEq(m=R0params$m, a=R0params$a, bc=R0params$Saliva_mean, p=R0params$p, n=R0params$n)
ln
vcEq <- function(m, a, bc, p, n){
vc <- (m * a^2 * bc * (p^n))/(-log(p))
}
R0params$VC <- vcEq(m=R0params$m, a=R0params$a, bc=R0params$Saliva_mean, p=R0params$p, n=R0params$n)
View(R0params)
R0params$VC <- vcEq(m=R0params$m, a=R0params$a, bc=R0params$Saliva_mean, p=R0params$p, n=R0params$n) *100
View(R0params)
r0mod <- glmer(VC~class.x + (1|Site_ID), data=R0params,
family=poisson)
r0mod <- glmer(VC~Class.x + (1|Site_ID), data=R0params,
family=poisson)
warnings()
r0mod <- glmer(VC~Class.x + (1|Site_ID), data=R0params,
family=gaussian)
r0mod <- lmer(VC~Class.x + (1|Site_ID), data=R0params,
family=gaussian)
r0mod <- lme(VC~Class.x + (1|Site_ID), data=R0params,
family=gaussian)
r0mod <- lmer(VC~Class.x + (1|Site_ID), data=R0params,
family=gaussian)
r0mod <- lmer(VC~Class.x + (1|Site_ID), data=R0params)
r0mod
require(lmerTest)
r0mod <- lmerTest::lmer(VC~Class.x + (1|Site_ID), data=R0params)
r0mod
r0Plot <- R0params %>%
group_by(Class.x) %>%
summarise(mean=mean(VC), se = se=(sd(VC)/sqrt(n()))) %>%
ungroup()
r0Plot <- R0params %>%
group_by(Class.x) %>%
summarise(mean=mean(VC), se=(sd(VC)/sqrt(n()))) %>%
ungroup()
View(r0Plot)
barCenters <- barplot(r0Plot,
col=c(colRural, colSuburban,
colUrban),
names.arg=Class.x,
ylim=c(0,0.3),
main = "Predicted Disease Risk",
ylab = "Vectorial Capacity",
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
barCenters <- barplot(r0Plot,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.3),
main = "Predicted Disease Risk",
ylab = "Vectorial Capacity",
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.3),
main = "Predicted Disease Risk",
ylab = "Vectorial Capacity",
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.3),
main = "Predicted Disease Risk",
ylab = "Vectorial Capacity",
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.2),
main = "Predicted Disease Risk",
ylab = "Vectorial Capacity",
las=1,
cex.lab=1.5, cex.axis=1.5,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.2),
main = "Predicted Disease Risk",
ylab = "Vectorial Capacity",
las=1,
cex.lab=1.5, cex.axis=1.5,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.2),
main = "Predicted Disease Risk",
ylab = "Relative Vectorial Capacity", #calculate per 1k initial larvae
las=1,
cex.lab=1.5, cex.axis=1.5,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.2),
main = "Predicted Disease Risk",
ylab = "Relative Vectorial Capacity", #calculate per 1k initial larvae
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,0.2),
#main = "Predicted Disease Risk",
ylab = "Relative Vectorial Capacity", #calculate per 1k initial larvae
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
R0params$n <- 1/(1.09E-04 * 28 * (28 - 10.39) * (43.05 - 28)^(1/2))
R0params$VC <- vcEq(m=R0params$m, a=R0params$a, bc=R0params$Saliva_mean, p=R0params$p, n=R0params$n) *100
View(R0params)
R0params$VC <- vcEq(m=R0params$m, a=R0params$a, bc=R0params$Saliva_mean, p=R0params$p, n=R0params$n) * 10
r0Plot <- R0params %>%
group_by(Class.x) %>%
summarise(mean=mean(VC), se=(sd(VC)/sqrt(n()))) %>%
ungroup()
pdf(file="figures/R0class.pdf", width = 8, height=6, family="sans")
par(mar=rep(6,4))
barCenters <- barplot(r0Plot$mean,
col=c(colRural, colSuburban,
colUrban),
names.arg=r0Plot$Class.x,
ylim=c(0,max(r0Plot$mean)+0.02),
#main = "Predicted Disease Risk",
ylab = "Relative Vectorial Capacity", #calculate per 1k initial larvae
las=1,
cex.lab=1.5, cex.axis=1,
xlab = "Land Class"
)
#add se bars
segments(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se, lwd = 1.5)
arrows(barCenters, r0Plot$mean - r0Plot$se , barCenters,
r0Plot$mean + r0Plot$se,
lwd = 1.5,
angle = 90,
code = 3, length = 0.03)
dev.off()
anova(R0params$VC~R0params$Class.x)
lm(R0params$VC~R0params$Class.x)
lmer(R0params$VC~R0params$Class.x)
r0stats <- lmer(VC~Class.x + (1|Site_ID), data=R0params)
r0stats
summary(r0stats)
View(R0params)
